{"version":3,"sources":["component/Login.js","component/Render.js","component/LetterAdd.js","component/Letters.js","component/LetterEntry.js","App.js","index.js"],"names":["Login","useState","password","setPassword","history","useHistory","className","onSubmit","e","preventDefault","test","msg","alert","localStorage","setItem","push","value","name","onChange","target","placeholder","Render","props","toggle","setToggle","replytoggle","setReplyToggle","reply","setReply","reRending","removeLetter","AiOutlineDelete","MdModeEdit","letter","removeReply","axios","defaults","headers","common","postId","id","split","cmtId","window","confirm","delete","createdAt","toLocaleString","_id","onClick","cmt","length","map","t","post","getItem","Date","type","autoComplete","required","LetterAdd","textarea","setTextArea","then","data","console","log","Letters","setData","refresh","setRefresh","_effectMethod","get","useEffect","res","a","url","catch","err","Helmet","charSet","LetterEntry","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c0212eb2.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./Login.css\";\n\nconst Login = () => {\n  const [password, setPassword] = useState(\"\");\n\n  let history = useHistory();\n\n  const handleChange = (e) => {\n    setPassword(e.target.value);\n    //변환할 값(setPassword) = setState\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!password || /^\\s*$/.test(password.msg)) {\n      alert(\"비밀번호를 입력하세요!\");\n      return;\n    } else if (password === \"930921\") {\n      alert(\"너 수빈이구나?\");\n      localStorage.setItem(\"name\", \"수빈\");\n      history.push(\"/letter\");\n    } else if (password === \"890616\") {\n      alert(\"너 병국이구나?\");\n      localStorage.setItem(\"name\", \"병국\");\n      history.push(\"/letter\");\n    } else {\n      alert(\"너 누구얏!\");\n      return;\n    }\n    setPassword(\"\");\n  };\n\n  //일종의 체이닝 나중에 제출한다음에 뭐가 나올껀지?\n  //변환할 값(setpassword) = setState\n  return (\n    <div className=\"wapper\">\n      <form className=\"login-form\" onSubmit={handleSubmit}>\n        <h1>너누구니?</h1>\n        <input\n          className=\"login-input\"\n          value={password}\n          name=\"text\"\n          onChange={handleChange}\n          placeholder=\"비밀번호 알고 있니?\"\n        />\n        <div className=\"wrap\">\n          <button className=\"button\">제출</button>\n        </div>\n      </form>\n    </div>\n  );\n};\nexport default Login;\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./Letters.css\";\nimport { FaReplyd } from \"react-icons/fa\";\nimport { MdSubdirectoryArrowRight } from \"react-icons/md\";\n\nconst Render = (props) => {\n  const [toggle, setToggle] = useState(false);\n  const [replytoggle, setReplyToggle] = useState(false);\n  const [reply, setReply] = useState(\"\");\n  const {\n    reRending,\n    removeLetter,\n    AiOutlineDelete,\n    MdModeEdit,\n    letter,\n  } = props;\n  //수정토글\n  const revisedToggle = () => {\n    setToggle(!toggle);\n  };\n  //댓글토글\n  const replyToggle = () => {\n    setReplyToggle(!replytoggle);\n  };\n  const handleReplyChange = (e) => {\n    setReply(e.target.value);\n  };\n  const handleReplySubmit = (e) => {\n    axios.defaults.headers.common[\"Access-Control-Allow-Origin\"] = \"*\";\n    e.preventDefault();\n    if (!reply || /^\\s*$/.test(reply)) {\n      alert(\"쓸 말이 그렇게 없니 도대체?\");\n      return;\n    } else {\n      axios.post(\n        `https://letters-heroku.herokuapp.com/api/comments/${e.target.id}`,\n        {\n          name: localStorage.getItem(\"name\"),\n          cmt: reply,\n          createdAt: new Date().toLocaleString(),\n        }\n      );\n      alert(\"제출되었습니닷\");\n      setReply(\"\");\n      reRending();\n    }\n  };\n  const removeReply = (e) => {\n    axios.defaults.headers.common[\"Access-Control-Allow-Origin\"] = \"*\";\n    e.preventDefault();\n    let postId = e.target.id.split(\",\")[0];\n    let cmtId = e.target.id.split(\",\")[1];\n    if (window.confirm(\"진짜 댓글 지울꺼야?\")) {\n      axios.delete(\n        `https://letters-heroku.herokuapp.com/api/comments/${postId}/${cmtId}`\n      );\n      alert(\"삭제되었습니닷\");\n      reRending();\n    } else {\n      return;\n    }\n  };\n  return (\n    <div className=\"letters-wrapper\">\n      {letter.createdAt.toLocaleString()}\n      <div className=\"letter-author\">\n        {letter.name === \"병국\"\n          ? `${letter.name}이가 수빈이에게`\n          : `${letter.name}이가 병국이에게`}\n      </div>\n      {\n        <div className=\"letters-content\" key={letter._id}>\n          {letter.msg}\n          <div className=\"letters-content-wapper\">\n            <span className=\"letters-content-delete\">\n              <AiOutlineDelete\n                id={letter._id}\n                onClick={(e) => removeLetter(e)}\n              />\n            </span>\n            <span className=\"letters-content-reply\" onClick={replyToggle}>\n              <FaReplyd id={letter._id} />({letter.cmt.length})\n            </span>\n            {replytoggle &&\n              letter.cmt.map((t) => {\n                return (\n                  <div>\n                    <div className=\"letters-reply-wapper\" key={t._id}>\n                      <div className=\"replyTime\">{t.createdAt}</div>\n                      <span className=\"replyComment\">\n                        <MdSubdirectoryArrowRight />\n                        {t.name}\n                      </span>\n                      <div>{t.cmt}</div>\n                      <div className=\"letters-reply-delete\">\n                        <AiOutlineDelete\n                          id={[letter._id, t._id]}\n                          onClick={removeReply}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                );\n              })}\n            <span className=\"letters-content-modify\" onClick={revisedToggle}>\n              <MdModeEdit />\n            </span>\n            {toggle && (\n              <form\n                className=\"letters-reply-form\"\n                onSubmit={handleReplySubmit}\n                id={letter._id}\n              >\n                <input\n                  onChange={handleReplyChange}\n                  type=\"Text\"\n                  name=\"name\"\n                  autoComplete=\"off\"\n                  value={reply}\n                  placeholder=\"어떤 댓글을 달꺼니?\"\n                  required\n                />\n\n                <button className=\"button\">제출</button>\n              </form>\n            )}\n          </div>\n          <div></div>\n        </div>\n      }\n    </div>\n  );\n};\nexport default Render;\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./LetterAdd.css\";\n\nconst LetterAdd = (props) => {\n  const { reRending } = props;\n  const [textarea, setTextArea] = useState(\"\");\n\n  const handleChange = (e) => {\n    setTextArea(e.target.value);\n    //변환할 값(setTextArea) = setState\n  };\n\n  const url = \"https://letters-heroku.herokuapp.com/api/letters\";\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!textarea || /^\\s*$/.test(textarea.msg)) {\n      alert(\"쓸 말이 그렇게 없니 도대체?\");\n      return;\n    } else {\n      axios\n        .post(url, {\n          name: localStorage.getItem(\"name\"),\n          msg: textarea,\n          createdAt: new Date().toLocaleString(),\n        })\n        .then((data) => {\n          console.log(data);\n          alert(\"제출되었습니닷\");\n          reRending();\n        });\n    }\n\n    setTextArea(\"\");\n    //일종의 체이닝 나중에 제출한다음에 뭐가 나올껀지?\n    //변환할 값(setTextArea) = setState\n  };\n  return (\n    <form className=\"letter-form\" onSubmit={handleSubmit}>\n      <h2>편지쓰기</h2>\n      <textarea\n        className=\"letter-textarea\"\n        type=\"Text\"\n        placeholder=\"어떤 말을 쓰고 싶니?\"\n        value={textarea}\n        name=\"text\"\n        onChange={handleChange}\n      />\n      <div className=\"wrap\">\n        <button className=\"button\">제출</button>\n      </div>\n    </form>\n  );\n};\nexport default LetterAdd;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./Letters.css\";\nimport Render from \"./Render\";\nimport { IoMdRefresh } from \"react-icons/io\";\nimport { AiOutlineDelete } from \"react-icons/ai\";\nimport { MdModeEdit } from \"react-icons/md\";\nimport LetterAdd from \"./LetterAdd\";\nimport { Helmet } from \"react-helmet\";\nconst Letters = () => {\n  const [data, setData] = useState(null);\n  const [refresh, setRefresh] = useState(false);\n  const _effectMethod = {\n    async _getLetter() {\n      return await axios.get(\n        \"https://letters-heroku.herokuapp.com/api/letters\"\n      );\n    },\n  };\n  // 화면 시작하자마자 데이터 랜더링하고 시작하기 위해 useEffect 사용\n  useEffect(() => {\n    _effectMethod._getLetter().then((res) => {\n      setData(res.data);\n    });\n  }, [refresh]);\n\n  const removeLetter = async (e) => {\n    const url = `https://letters-heroku.herokuapp.com/api/letters/${e.target.id}`;\n    if (window.confirm(\"진짜 지울꺼야? 너 편지를 지울꺼니? 진짜로?\")) {\n      await axios\n        .delete(url)\n        .then((res) => {\n          alert(\"지워졌어 나쁜놈아\");\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    } else {\n      return;\n    }\n    reRending();\n  };\n  //리렌더\n  const reRending = () => {\n    setRefresh(!refresh);\n  };\n\n  return !data ? (\n    <div className=\"letters-wrapper\">\n      <Helmet>\n        <meta charSet=\"utf-8\" />\n        <title>편지쓰기</title>\n      </Helmet>\n      <LetterAdd />\n      <div className=\"letters-content\">\n        편지를 데이터베이스에서 불러오고 있는데 오류가 있으면 안뜰꺼야 새로고침\n        해보렴..{\" \"}\n        <div className=\"wrap\">\n          <button className=\"button\" onClick={() => reRending()}>\n            <IoMdRefresh />\n          </button>\n        </div>\n      </div>\n    </div>\n  ) : (\n    <div className=\"letters-wrapper\">\n      <Helmet>\n        <meta charSet=\"utf-8\" />\n        <title>편지쓰기</title>\n      </Helmet>\n      <LetterAdd reRending={reRending} />\n      {data.map((letter) => (\n        <Render\n          letter={letter}\n          reRending={reRending}\n          AiOutlineDelete={AiOutlineDelete}\n          MdModeEdit={MdModeEdit}\n          removeLetter={removeLetter}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Letters;\n","import React from \"react\";\nimport Letters from \"./Letters\";\nimport LetterAdd from \"./LetterAdd\";\nimport \"../App.css\";\nconst LetterEntry = () => {\n  return (\n    <div className=\"body-warpper\">\n      <Letters />\n    </div>\n  );\n};\nexport default LetterEntry;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Login from \"./component/Login\";\nimport LetterEntry from \"./component/LetterEntry\";\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Route exact path=\"/letters_clients\" component={Login} />\n        <Route exact path=\"/Letter\" component={LetterEntry} />\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}