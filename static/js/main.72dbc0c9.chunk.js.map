{"version":3,"sources":["Component/Render.js","Component/Letters.js","Component/LetterAdd.js","App.js","reportWebVitals.js","index.js"],"names":["Render","props","useState","toggle","setToggle","replytoggle","setReplyToggle","reply","setReply","reRending","removeLetter","AiOutlineDelete","MdModeEdit","letter","removeReply","e","axios","defaults","headers","common","preventDefault","postId","target","id","split","cmtId","window","confirm","delete","alert","className","createdAt","toLocaleString","msg","_id","onClick","cmt","length","map","t","onSubmit","test","post","Date","then","data","console","log","onChange","value","type","name","autoComplete","placeholder","required","Letters","setData","refresh","setRefresh","_effectMethod","get","useEffect","res","a","url","catch","err","LetterAdd","textarea","setTextArea","location","reload","App","Helmet","charSet","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.72dbc0c9.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./Letters.css\";\nimport { FaReplyd } from \"react-icons/fa\";\nimport { MdSubdirectoryArrowRight } from \"react-icons/md\";\n\nconst Render = (props) => {\n  const [toggle, setToggle] = useState(false);\n  const [replytoggle, setReplyToggle] = useState(false);\n  const [reply, setReply] = useState(\"\");\n  const {\n    reRending,\n    removeLetter,\n    AiOutlineDelete,\n    MdModeEdit,\n    letter,\n  } = props;\n  const url = \"http://localhost:4001/api/letters\";\n  //수정토글\n  const revisedToggle = () => {\n    setToggle(!toggle);\n  };\n  //댓글토글\n  const replyToggle = () => {\n    setReplyToggle(!replytoggle);\n  };\n  const handleReplyChange = (e) => {\n    setReply(e.target.value);\n  };\n  const handleReplySubmit = (e) => {\n    axios.defaults.headers.common[\"Access-Control-Allow-Origin\"] = \"*\";\n    e.preventDefault();\n    if (!reply || /^\\s*$/.test(reply)) {\n      alert(\"쓸 말이 그렇게 없니 도대체?\");\n      return;\n    } else {\n      axios\n        .post(`http://localhost:4001/api/comments/${e.target.id}`, {\n          cmt: reply,\n          createdAt: new Date().toLocaleString(),\n        })\n        .then((data) => {\n          console.log(data);\n          alert(\"제출되었습니닷\");\n        });\n      reRending();\n    }\n  };\n  const removeReply = (e) => {\n    axios.defaults.headers.common[\"Access-Control-Allow-Origin\"] = \"*\";\n    e.preventDefault();\n    let postId = e.target.id.split(\",\")[0];\n    let cmtId = e.target.id.split(\",\")[1];\n    if (window.confirm(\"진짜 댓글 지울꺼야?\")) {\n      axios.delete(`http://localhost:4001/api/comments/${postId}/${cmtId}`);\n      alert(\"삭제되었습니닷\");\n      reRending();\n    } else {\n      return;\n    }\n  };\n\n  return (\n    <div className=\"letters-wrapper\">\n      {letter.createdAt.toLocaleString()}\n      {\n        <div className=\"letters-content\" key={letter._id}>\n          {letter.msg}\n          <div className=\"letters-content-wapper\">\n            <span className=\"letters-content-delete\">\n              <AiOutlineDelete\n                id={letter._id}\n                onClick={(e) => removeLetter(e)}\n              />\n            </span>\n            <span className=\"letters-content-reply\" onClick={replyToggle}>\n              <FaReplyd id={letter._id} />({letter.cmt.length})\n            </span>\n            {replytoggle &&\n              letter.cmt.map((t) => {\n                return (\n                  <div>\n                    <div className=\"letters-reply-wapper\" key={t._id}>\n                      <div className=\"replyTime\">{t.createdAt}</div>\n                      <span className=\"replyComment\">\n                        <MdSubdirectoryArrowRight />\n                        {t.cmt}\n                      </span>\n                      <div className=\"letters-reply-delete\">\n                        <AiOutlineDelete\n                          id={[letter._id, t._id]}\n                          onClick={removeReply}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                );\n              })}\n            <span className=\"letters-content-modify\" onClick={revisedToggle}>\n              <MdModeEdit />\n            </span>\n            {toggle && (\n              <form\n                className=\"letters-reply-form\"\n                onSubmit={handleReplySubmit}\n                id={letter._id}\n              >\n                <input\n                  onChange={handleReplyChange}\n                  type=\"Text\"\n                  name=\"name\"\n                  autoComplete=\"off\"\n                  value={reply}\n                  placeholder=\"어떤 댓글을 달꺼니?\"\n                  required\n                />\n\n                <button className=\"button\">제출</button>\n              </form>\n            )}\n          </div>\n          <div></div>\n        </div>\n      }\n    </div>\n  );\n};\nexport default Render;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./Letters.css\";\nimport Render from \"./Render\";\nimport { IoMdRefresh } from \"react-icons/io\";\nimport { AiOutlineDelete } from \"react-icons/ai\";\nimport { MdModeEdit } from \"react-icons/md\";\n\nconst Letters = () => {\n  const [data, setData] = useState(null);\n  const [refresh, setRefresh] = useState(false);\n  const _effectMethod = {\n    async _getLetter() {\n      return await axios.get(\"http://localhost:4001/api/letters\");\n    },\n  };\n  // 화면 시작하자마자 데이터 랜더링하고 시작하기 위해 useEffect 사용\n  useEffect(() => {\n    _effectMethod._getLetter().then((res) => {\n      setData(res.data);\n    });\n  }, [refresh]);\n\n  const removeLetter = async (e) => {\n    console.log(\"🚀 ~ file: Letters.js ~ line 32 ~ removeLetter ~ e\", e);\n    const url = `http://localhost:4001/api/letters/${e.target.id}`;\n    if (window.confirm(\"진짜 지울꺼야? 너 편지를 지울꺼니? 진짜로?\")) {\n      await axios\n        .delete(url)\n        .then((res) => {\n          alert(\"지워졌어 나쁜놈아\");\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    } else {\n      return;\n    }\n    reRending();\n  };\n  //리렌더\n  const reRending = () => {\n    setRefresh(!refresh);\n  };\n\n  return !data ? (\n    <div className=\"letters-wrapper\">\n      <div className=\"letters-content\">\n        편지를 데이터베이스에서 불러오고 있는데 오류가 있으면 안뜰꺼야 새로고침\n        해보렴..{\" \"}\n        <div className=\"wrap\">\n          <button className=\"button\" onClick={() => reRending()}>\n            <IoMdRefresh />\n          </button>\n        </div>\n      </div>\n    </div>\n  ) : (\n    data.map((letter) => (\n      <Render\n        letter={letter}\n        reRending={reRending}\n        AiOutlineDelete={AiOutlineDelete}\n        MdModeEdit={MdModeEdit}\n        removeLetter={removeLetter}\n      />\n    ))\n  );\n};\n\nexport default Letters;\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./LetterAdd.css\";\n\nconst LetterAdd = () => {\n  const [textarea, setTextArea] = useState(\"\");\n\n  const handleChange = (e) => {\n    setTextArea(e.target.value);\n    //변환할 값(setTextArea) = setState\n  };\n\n  const url = \"http://localhost:4001/api/letters\";\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!textarea || /^\\s*$/.test(textarea.msg)) {\n      alert(\"쓸 말이 그렇게 없니 도대체?\");\n      return;\n    } else {\n      axios\n        .post(url, { msg: textarea, createdAt: new Date().toLocaleString() })\n        .then((data) => {\n          console.log(data);\n          alert(\"제출되었습니닷\");\n          window.location.reload();\n        });\n    }\n\n    setTextArea(\"\");\n    //일종의 체이닝 나중에 제출한다음에 뭐가 나올껀지?\n    //변환할 값(setTextArea) = setState\n  };\n  return (\n    <form className=\"letter-form\" onSubmit={handleSubmit}>\n      <h2>수빈이 한태 편지쓰기</h2>\n      <textarea\n        className=\"letter-textarea\"\n        type=\"Text\"\n        placeholder=\"어떤 말을 쓰고 싶니?\"\n        value={textarea}\n        name=\"text\"\n        onChange={handleChange}\n        //ref={inputRef}\n      />\n      <div className=\"wrap\">\n        <button className=\"button\">제출</button>\n      </div>\n    </form>\n  );\n};\nexport default LetterAdd;\n","import Letters from \"./Component/Letters\";\nimport LetterAdd from \"./Component/LetterAdd\";\nimport \"./App.css\";\nimport { Helmet } from \"react-helmet\";\n\nfunction App() {\n  return (\n    <div className=\"body-warpper\">\n      <Helmet>\n        <meta charSet=\"utf-8\" />\n        <title>수빈이 한태 편지쓰기</title>\n      </Helmet>\n      <LetterAdd />\n      <Letters />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}